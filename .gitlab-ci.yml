variables:
    APP_ENV: test
    DATABASE_URL: mysql://root:root@127.0.0.1:3306/su_headless_test
    MYSQL_ROOT_PASSWORD: root

stages:
    - install
    - test

composer:
    stage: install
    image: composer:latest
    before_script:
        - composer config -g cache-dir "$(pwd)/.composer-cache"
    script:
        - composer install -n --prefer-dist --no-scripts
        - curl --show-error --silent https://getcomposer.org/installer | php
    artifacts:
        name: composer-dependencies
        expire_in: 8 hours
        paths:
            - vendor
            - composer.phar
            - composer.lock
    cache:
        key: composer
        paths:
            - .composer-cache/

test-unit:
    stage: test
    image: sulu/php:7.3-cli
    script:
        - docker-php-ext-enable xdebug
        - php composer.phar phpunit -- Tests/Unit --coverage-php var/coverage.php --coverage-html coverage-report --log-junit var/junit.xml
        - php Tests/coverage-checker.php "line" "95" "Content"
    artifacts:
        name: coverage-report
        expire_in: 7 days
        when: always
        paths:
            - coverage-report/
        reports:
            junit: var/junit.xml

test-functional:
    stage: test
    image: sulu/php:7.3-cli
    services:
        - mysql:5.7
    script:
        - echo "waiting for mysql container startup" && sleep 5
        - php composer.phar bootstrap-test-environment
        - php composer.phar phpunit -- Tests/Functional --log-junit var/junit.xml
    artifacts:
        expire_in: 7 days
        reports:
            junit: var/junit.xml

lint:
    stage: test
    image: sulu/php:7.3-cli
    services:
        - mysql:5.7
    script:
        - echo "waiting for mysql container startup" && sleep 5
        - php composer.phar bootstrap-test-environment
        - php composer.phar lint

js-website:
    stage: test
    image: node:10
    variables:
        NODE_OPTIONS: --max-old-space-size=1536
    before_script:
        - npm config set cache "$(pwd)/.npm-cache"
    script:
        - cd Resources/js-website
        - npm install
        - npm run lint
        - npm run depcruise
        - npm run build
    cache:
        key: npm
        paths:
            - .npm-cache/
